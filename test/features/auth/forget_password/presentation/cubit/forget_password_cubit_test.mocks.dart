// Mocks generated by Mockito 5.4.6 from annotations
// in tracking_app/test/features/auth/forget_password/presentation/cubit/forget_password_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;
import 'package:tracking_app/core/api_layer/api_result/api_result.dart' as _i5;
import 'package:tracking_app/features/auth/forget_password/domain/entities/forget_password_response_entity.dart'
    as _i6;
import 'package:tracking_app/features/auth/forget_password/domain/entities/reset_password_response_entity.dart'
    as _i11;
import 'package:tracking_app/features/auth/forget_password/domain/entities/verify_reset_code_entity.dart'
    as _i9;
import 'package:tracking_app/features/auth/forget_password/domain/repositories/forget_password_repo.dart'
    as _i2;
import 'package:tracking_app/features/auth/forget_password/domain/usecases/forget_password_use_case.dart'
    as _i3;
import 'package:tracking_app/features/auth/forget_password/domain/usecases/reset_password_use_case.dart'
    as _i10;
import 'package:tracking_app/features/auth/forget_password/domain/usecases/varify_reset_code_use_case.dart'
    as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeForgetPasswordRepo_0 extends _i1.SmartFake
    implements _i2.ForgetPasswordRepo {
  _FakeForgetPasswordRepo_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ForgetPasswordUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockForgetPasswordUseCase extends _i1.Mock
    implements _i3.ForgetPasswordUseCase {
  MockForgetPasswordUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ForgetPasswordRepo get forgetPasswordRepo =>
      (super.noSuchMethod(
            Invocation.getter(#forgetPasswordRepo),
            returnValue: _FakeForgetPasswordRepo_0(
              this,
              Invocation.getter(#forgetPasswordRepo),
            ),
          )
          as _i2.ForgetPasswordRepo);

  @override
  _i4.Future<_i5.ApiResult<_i6.ForgetPasswordResponseEntity>> call({
    required String? email,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#call, [], {#email: email}),
            returnValue:
                _i4.Future<
                  _i5.ApiResult<_i6.ForgetPasswordResponseEntity>
                >.value(
                  _i7.dummyValue<
                    _i5.ApiResult<_i6.ForgetPasswordResponseEntity>
                  >(this, Invocation.method(#call, [], {#email: email})),
                ),
          )
          as _i4.Future<_i5.ApiResult<_i6.ForgetPasswordResponseEntity>>);
}

/// A class which mocks [VerifyResetCodeUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockVerifyResetCodeUseCase extends _i1.Mock
    implements _i8.VerifyResetCodeUseCase {
  MockVerifyResetCodeUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ForgetPasswordRepo get forgetPasswordRepo =>
      (super.noSuchMethod(
            Invocation.getter(#forgetPasswordRepo),
            returnValue: _FakeForgetPasswordRepo_0(
              this,
              Invocation.getter(#forgetPasswordRepo),
            ),
          )
          as _i2.ForgetPasswordRepo);

  @override
  _i4.Future<_i5.ApiResult<_i9.VerifyResetCodeResponseEntity>> call({
    required String? resetCode,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#call, [], {#resetCode: resetCode}),
            returnValue:
                _i4.Future<
                  _i5.ApiResult<_i9.VerifyResetCodeResponseEntity>
                >.value(
                  _i7.dummyValue<
                    _i5.ApiResult<_i9.VerifyResetCodeResponseEntity>
                  >(
                    this,
                    Invocation.method(#call, [], {#resetCode: resetCode}),
                  ),
                ),
          )
          as _i4.Future<_i5.ApiResult<_i9.VerifyResetCodeResponseEntity>>);
}

/// A class which mocks [ResetPasswordUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockResetPasswordUseCase extends _i1.Mock
    implements _i10.ResetPasswordUseCase {
  MockResetPasswordUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ForgetPasswordRepo get forgetPasswordRepo =>
      (super.noSuchMethod(
            Invocation.getter(#forgetPasswordRepo),
            returnValue: _FakeForgetPasswordRepo_0(
              this,
              Invocation.getter(#forgetPasswordRepo),
            ),
          )
          as _i2.ForgetPasswordRepo);

  @override
  _i4.Future<_i5.ApiResult<_i11.ResetPasswordResponseEntity>> call({
    required String? email,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#call, [], {
              #email: email,
              #newPassword: newPassword,
            }),
            returnValue:
                _i4.Future<
                  _i5.ApiResult<_i11.ResetPasswordResponseEntity>
                >.value(
                  _i7.dummyValue<
                    _i5.ApiResult<_i11.ResetPasswordResponseEntity>
                  >(
                    this,
                    Invocation.method(#call, [], {
                      #email: email,
                      #newPassword: newPassword,
                    }),
                  ),
                ),
          )
          as _i4.Future<_i5.ApiResult<_i11.ResetPasswordResponseEntity>>);
}
