// Mocks generated by Mockito 5.4.6 from annotations
// in tracking_app/test/features/forget_password/data/repos_impl/forget_password_repo_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:tracking_app/core/api_layer/api_result/api_result.dart' as _i4;
import 'package:tracking_app/features/forget_password/data/datasources/contracts/forget_password_remote_data_source.dart'
    as _i2;
import 'package:tracking_app/features/forget_password/domain/entities/forget_password_response_entity.dart'
    as _i5;
import 'package:tracking_app/features/forget_password/domain/entities/reset_password_response_entity.dart'
    as _i8;
import 'package:tracking_app/features/forget_password/domain/entities/verify_reset_code_entity.dart'
    as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ForgetPasswordRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockForgetPasswordRemoteDataSource extends _i1.Mock
    implements _i2.ForgetPasswordRemoteDataSource {
  MockForgetPasswordRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.ApiResult<_i5.ForgetPasswordResponseEntity>> forgetPassword({
    required String? email,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#forgetPassword, [], {#email: email}),
            returnValue:
                _i3.Future<
                  _i4.ApiResult<_i5.ForgetPasswordResponseEntity>
                >.value(
                  _i6.dummyValue<
                    _i4.ApiResult<_i5.ForgetPasswordResponseEntity>
                  >(
                    this,
                    Invocation.method(#forgetPassword, [], {#email: email}),
                  ),
                ),
          )
          as _i3.Future<_i4.ApiResult<_i5.ForgetPasswordResponseEntity>>);

  @override
  _i3.Future<_i4.ApiResult<_i7.VerifyResetCodeResponseEntity>> verifyResetCode({
    required String? resetCode,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#verifyResetCode, [], {#resetCode: resetCode}),
            returnValue:
                _i3.Future<
                  _i4.ApiResult<_i7.VerifyResetCodeResponseEntity>
                >.value(
                  _i6.dummyValue<
                    _i4.ApiResult<_i7.VerifyResetCodeResponseEntity>
                  >(
                    this,
                    Invocation.method(#verifyResetCode, [], {
                      #resetCode: resetCode,
                    }),
                  ),
                ),
          )
          as _i3.Future<_i4.ApiResult<_i7.VerifyResetCodeResponseEntity>>);

  @override
  _i3.Future<_i4.ApiResult<_i8.ResetPasswordResponseEntity>> resetPassword({
    required String? email,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#resetPassword, [], {
              #email: email,
              #newPassword: newPassword,
            }),
            returnValue:
                _i3.Future<
                  _i4.ApiResult<_i8.ResetPasswordResponseEntity>
                >.value(
                  _i6.dummyValue<
                    _i4.ApiResult<_i8.ResetPasswordResponseEntity>
                  >(
                    this,
                    Invocation.method(#resetPassword, [], {
                      #email: email,
                      #newPassword: newPassword,
                    }),
                  ),
                ),
          )
          as _i3.Future<_i4.ApiResult<_i8.ResetPasswordResponseEntity>>);
}
