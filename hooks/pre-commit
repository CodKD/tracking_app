#!/bin/sh
#
# Pre-commit hook to run GitHub Actions workflows locally
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

echo "🚀 Running pre-commit checks..."

# Validate branch name (similar to validate-branch-name.yml workflow)
echo "📋 Validating branch name..."
CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
BRANCH_REGEX='^(feature|hotfix|bugfix|release)\/[A-Z]+-[0-9]+.*$'

if echo "$CURRENT_BRANCH" | grep -qE "$BRANCH_REGEX"; then
    echo "✅ Branch name '$CURRENT_BRANCH' is valid"
else
    if [ "$CURRENT_BRANCH" = "main" ] || [ "$CURRENT_BRANCH" = "developement" ] || [ "$CURRENT_BRANCH" = "master" ]; then
        echo "ℹ️  Committing to protected branch '$CURRENT_BRANCH'"
    else
        echo "❌ Invalid branch name: '$CURRENT_BRANCH'"
        echo "Must match: feature/PROJECT-123-description, hotfix/PROJECT-123-description, etc."
        echo "Examples:"
        echo "  - feature/TRACK-001-user-authentication"
        echo "  - bugfix/TRACK-002-fix-login-issue"
        echo "  - hotfix/TRACK-003-critical-security-fix"
        exit 1
    fi
fi

# Check if Flutter is installed
echo "🔍 Checking Flutter installation..."
if ! command -v flutter >/dev/null 2>&1; then
    echo "❌ Error: Flutter is not installed or not in PATH"
    echo "Please install Flutter to proceed with the commit"
    exit 1
fi

# Check if we're in a Flutter project
if [ ! -f "pubspec.yaml" ]; then
    echo "❌ Error: Not in a Flutter project directory"
    exit 1
fi

# Show Flutter version (similar to unit-testing-action.yaml)
echo "📱 Flutter version:"
flutter --version

echo "📦 Installing Flutter dependencies..."
if ! flutter pub get; then
    echo "❌ Error: Failed to install Flutter dependencies"
    exit 1
fi

echo "🔍 Running Flutter analyze (lint)..."
if ! flutter analyze; then
    echo "❌ Error: Flutter analyze failed. Please fix the issues before committing."
    exit 1
fi

echo "🧪 Running Flutter tests with coverage..."
if ! flutter test --coverage; then
    echo "❌ Error: Flutter tests failed. Please fix the failing tests before committing."
    exit 1
fi

# Check for non-ASCII filenames
if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=$(git hash-object -t tree /dev/null)
fi

allownonascii=$(git config --type=bool hooks.allownonascii)

if [ "$allownonascii" != "true" ] &&
	test $(git diff-index --cached --name-only --diff-filter=A -z $against |
	  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
then
	cat <<\EOF
Error: Attempt to add a non-ASCII file name.

This can cause problems if you want to work with people on other platforms.

To be portable it is advisable to rename the file.

If you know what you are doing you can disable this check using:

  git config hooks.allownonascii true
EOF
	exit 1
fi

# Check for whitespace errors
if ! git diff-index --check --cached $against --; then
    echo "Error: Whitespace errors found. Please fix them before committing."
    exit 1
fi

echo "✅ All pre-commit checks passed!"
exit 0
